services:
  fastapi-app:
    image: fastapi-image:latest
    container_name: fastapi-container
    volumes:
      - ${MEDIA_PATH}:${MEDIA_PATH}
      - ${LOGS_PATH}:${LOGS_PATH}
    networks:
      - mynetwork


  celery-worker:
    image: fastapi-image:latest
    container_name: celery-worker-container
    command: "celery -A app.celery.celery_app.celery_instance worker --loglevel=info"
    volumes:
      - ${MEDIA_PATH}:${MEDIA_PATH}
      - ${LOGS_PATH}:${LOGS_PATH}
    networks:
      - mynetwork


  celery-beat:
    image: fastapi-image:latest
    container_name: celery-beat-container
    command: "celery -A app.celery.celery_app.celery_instance beat --loglevel=info"
    volumes:
      - ${MEDIA_PATH}:${MEDIA_PATH}
      - ${LOGS_PATH}:${LOGS_PATH}
    networks:
      - mynetwork


  # vuejs-app:
  #   image: vuejs-image:latest
  #   container_name: vuejs-container
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NODE_ENV=production

  nginx:
    image: nginx:latest
    container_name: nginx-container
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - fastapi-app
    networks:
      - mynetwork
    ports:
      - "80:80"  # Чтобы Nginx был доступен извне


networks:
  mynetwork: