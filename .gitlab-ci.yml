# stages:
#   - build
#   - migrations
#   - deploy

# before_script:
#   - cp ${ENV} .env

# build-fastapi:
#   stage: build
#   script:
#     - docker build -t fastapi-image -f Dockerfile-fastapi .

# build-vuejs:  
#   stage: build
#   script:
#     - docker build -t vuejs-image -f Dockerfile-vuejs .

# migrations:
#   stage: migrations
#   script:
#     - docker run --rm fastapi-image alembic upgrade head

# deploy-job:
#   stage: deploy
#   script:
#     - docker-compose up -d
#     - docker image prune -f

# Lint:
#   stage: lint_format
#   script:
#     - docker run --rm fastapi-image ruff check

# Format:
#   stage: lint_format
#   script:
#     - docker run --rm fastapi-image ruff format --check

# Tests:
#   stage: test
#   script:
#     - docker run --rm fastapi-image pytest -s -v



# stages:
#   - reload-services

# reload-services:
#   stage: reload-services
#   before_script:
#     - cp ${ENV} .env
#   script:
#     - docker run --name booking_nginx \
#     --volume ./nginx.conf:/etc/nginx/nginx.conf \
#     --network=myNetwork \
#     --rm -p 80:80 -d nginx
